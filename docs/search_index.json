[["index.html", "PSY6422 Project Which Anime Studio Is The Best? An Examination Between 1958~2020 Overview 0.1 Data Origin 0.2 Project Aims Notes", " PSY6422 Project Which Anime Studio Is The Best? An Examination Between 1958~2020 Halleyson Li 2021-05-25 Overview My growth is accompanied by Japanese animate. Some of them bring me joy, and others teach me new things about life. The photo below is Sunrise studios, which is one of the most famous, prolific, well known for creating top-quality anime, at the time, my favourite studio. Like an ordinary anime fan, I always wanted to gain more information that is related to anime. In particular, I want to statistically find out that whether or not, when an animate was produced by certain studios, without looking at the contains, people could predict that it must be good. As such, I managed to find a data set that contains 14000+ anime entries to fulfil my curiosity. 0.1 Data Origin This data is scraped from Anime-planet on June 15, 2020. It was uploaded by Alan Mathew on Kaggle. Anime-planet is a website created and run by anime fans. Millions of users accessing the site per month, to stream legal anime or leaving the reviews. 0.2 Project Aims The aim of this project is to visually answer the question: 1. Do prolific anime studios generally indicate they are good at producing high quality anime? 2. Based on the name of the studios, can people use it to predict the quality of their output 3. Which is the best anime studio? In order to answer those questions, I want to restrict my studio range to only the top 50 prolific studios, as they are more well known by the anime viewers. I want to first create a scatter plot of studios against their total amount of animate, with the size and colour of the dot represent total average rating of their work. This could give a general understanding on whether prolific means more people likes their work, resulted by higher average rating. Then I want to create a gganimate to visually see how each studio’s rating changes across the year, in order to gain more inside view of the studios I am interested with. At the same time, find out which studio have the consistence of making high quality anime. Notes The GitHub repository for this project could access through here To edit my bookdown, please open the folder through open project in Rstudio. The photo of Sunrise studio was taken from here "],["data-cleaning.html", "Part 1 Data cleaning 1.1 Importing the data", " Part 1 Data cleaning 1.1 Importing the data First, let us load the data. A quick way to do is simply click the raw data folder from the files section at the bottom right and then import. Another way is by code shows as below: library(readr) anime &lt;- read_csv(&quot;raw data/anime.csv&quot;) #Quick check to see if the data have been successfully and correctly loaded. head(anime, row = 5) ## # A tibble: 6 x 18 ## title mediaType eps duration ongoing startYr finishYr sznOfRelease ## &lt;chr&gt; &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; ## 1 Full… TV 64 NA FALSE 2009 2010 Spring ## 2 your… Movie 1 107 FALSE 2016 2016 &lt;NA&gt; ## 3 A Si… Movie 1 130 FALSE 2016 2016 &lt;NA&gt; ## 4 Haik… TV 10 NA FALSE 2016 2016 Fall ## 5 Atta… TV 10 NA FALSE 2019 2019 Spring ## 6 Demo… TV 26 NA FALSE 2019 2019 Spring ## # … with 10 more variables: description &lt;chr&gt;, studios &lt;chr&gt;, tags &lt;chr&gt;, ## # contentWarn &lt;chr&gt;, watched &lt;dbl&gt;, watching &lt;dbl&gt;, wantWatch &lt;dbl&gt;, ## # dropped &lt;dbl&gt;, rating &lt;dbl&gt;, votes &lt;dbl&gt; ** For the meaning of each variable, please look at my codebook.txt* ## Cleaning the data library(tidyverse) library(ggplot2) #change all [] from the raw data to NA is.na(anime) &lt;- anime == &quot;[]&quot; #set new data frame to keep the original without contaminated anime1 &lt;- anime #To find out the staring and ending year of the data summary(anime$startYr) #removing special character gsub(&quot;&#39;&quot;, &quot;&quot;, anime1$studios) gsub(&quot;\\\\[&quot;, &quot;&quot;, anime1$studios) gsub(&quot;\\\\]&quot;, &quot;&quot;, anime1$studios) #Forming a table of the studios and the amount of their production studio &lt;- aggregate(anime$studios, by = list(anime$studios), FUN = length) #Rename the column colnames(studio) &lt;- c(&quot;studios&quot;, &quot;production&quot;) #Set all Na to 0, becasue the missing data is unpredictable anime1$rating[is.na(anime1$rating)] &lt;- 0 anime1$studios[is.na(anime1$studios)] &lt;- 0 #Create overall average rating of each studio studiorate &lt;- aggregate(anime1[, 17], list(anime1$studios), mean) colnames(studiorate) &lt;- c(&quot;studios&quot;, &quot;rating&quot;) #merge two table studioall &lt;- merge(studio,studiorate, by = &quot;studios&quot;, all = TRUE) #Only select the top 50 studios based on the amount of total production library(data.table) #need this package to use piping library (dplyr) studiotop50 &lt;- data.table(studioall, key = &quot;production&quot;) studiotop50 &lt;- studiotop50 %&gt;% #arrange the table to the decreasing trend arrange(desc(production)) %&gt;% slice (1:50) After achieving a table only contains top 50 studios with their total numbers of production, plus the overall average rating from 1958 to 2020, a graph could be plotted to visualise which is the most prolific studio and its rating. "],["graphical-look-on-the-data.html", "Part 2 Graphical look on the data 2.1 First ggplot of the data 2.2 Second ggplot of the data 2.3 Further Interprtation", " Part 2 Graphical look on the data 2.1 First ggplot of the data First, I want to visually find out which is the most prolific studio #Making a scatter plot studio1959_2020 &lt;- ggplot(data = studiotop50, mapping = aes(x = production, y = reorder (studios, production))) + geom_point(aes(size = rating, colour = rating, check_overlap = TRUE)) + #Rating label round it to 2 sig fig and bold geom_text(aes(label = sprintf(&quot;%.2f&quot;,rating),hjust = -0.5),frontface=&quot;bold&quot;) #Set up the theme, prevent label overlapping, and create tags. plot &lt;- studio1959_2020 + scale_x_discrete(guide = guide_axis(n.dodge = 5)) + scale_x_continuous(&quot;Number of Total Productions&quot;) + theme(axis.text.y = element_text(size = 12, face = &quot;bold&quot;), axis.title.x = element_text(size = 20, face = &quot;bold&quot;), axis.text.x = element_text(size = 20, face = &quot;bold&quot;), plot.tag.position = c (0.2, 0.01)) print(plot + labs(y = &quot;Studio Name&quot;, tag = &quot;Figure1: 1958-2020 No.studio&#39;s production and overallrating&quot;)) 2.2 Second ggplot of the data With second graph, I could visually find out the top average rating studio and its amount of work. studio1959_2020c &lt;- ggplot(data = studiotop50, mapping = aes(x = rating, y = reorder (studios, rating))) + geom_point(aes(size = production, colour = rating, check_overlap = TRUE)) + geom_text(aes(label = production),hjust = -0.5) + geom_text(aes(label = sprintf(&quot;%.2f&quot;,rating),hjust = +1.5)) plot1 &lt;- studio1959_2020c + scale_x_discrete(guide = guide_axis(n.dodge = 5)) + scale_x_continuous(&quot;Average rating&quot;) + theme(axis.text.y = element_text(size = 12, face = &quot;bold&quot;), axis.title.x = element_text(size = 12, face = &quot;bold&quot;), axis.text.x = element_text(size = 12, face = &quot;bold&quot;), plot.tag.position = c (0.2, 0.01)) print(plot1+labs(y = &quot;Studio Name&quot;,tag = &quot;Figure2: 1958-2020 ranked studio&#39;s overallrating&quot;)) 2.3 Further Interprtation After having a general view of the data, I want to find out the best studios that their total amount of production is above lower quartile and the rating is above median. This could reflect the studio’s consistence of producing quality Anime. #Find out the mean production without affected by outliers (number of production above 300) studiotop50less &lt;- studiotop50 %&gt;% top_n(-45, studiotop50$production) summary(studiotop50less$production) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 42.00 49.00 62.00 92.93 116.00 263.00 #Find out the amount of studios that is above median rating summary(studiotop50$rating) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.6368 2.7511 2.9774 2.9305 3.2745 3.6612 sum(studiotop50$rating&gt;=2.9774) ## [1] 25 #First, find out the studio that the rating is above median beststudio &lt;- studiotop50 %&gt;% top_n(26, studiotop50$rating) #Then, find out the studio that the production is above lower quartile sum(beststudio$production&gt;=49) ## [1] 21 #In the end, create the list of the best studio. beststudio1 &lt;- beststudio%&gt;%top_n(21,beststudio$production) Visualise the best studios best1959_2020 &lt;- ggplot(data = beststudio1, mapping = aes(x = rating, y = reorder (studios, rating))) + geom_point(aes(size = production, colour = rating, check_overlap = TRUE)) + geom_text(aes(label = production),hjust = -0.5) + geom_text(aes(label = sprintf(&quot;%.2f&quot;,rating),hjust = +1.5)) plot2 &lt;- best1959_2020 + scale_x_discrete(guide = guide_axis(n.dodge = 1)) + scale_x_continuous(&quot;Average rating&quot;) + theme(axis.text.y = element_text(size = 12, face = &quot;bold&quot;), axis.title.x = element_text(size = 12, face = &quot;bold&quot;), axis.text.x = element_text(size = 12, face = &quot;bold&quot;), plot.tag.position = c (0.2, 0.01)) print(plot2+labs(y = &quot;Studio Name&quot;,tag = &quot;Figure3: 1958-2020 Best studio&#39;s overallrating&quot;)) "],["animated-graph.html", "Part 3 Animated graph 3.1 Data cleaning 3.2 Racing plot 1 3.3 Racing plot 2 3.4 Racing plot on best studio", " Part 3 Animated graph 3.1 Data cleaning I want to find out the studios that is above the lower quartile of average rating to see its rating change across 1958 to 2020. Thus, further data cleaning is needed. summary(studiotop50$rating) studiotop37r &lt;- studiotop50 %&gt;% arrange(desc(rating)) %&gt;% #after looking at the code, find out how many is below the 2.75 lower quartile slice (1:37) #create a data set that contains only anime starting year, rating of the anime, and the name of the anime. selectstudio &lt;- anime1 %&gt;% select(title, startYr, studios, rating) selectstudioall &lt;- merge(studiotop37r, selectstudio,by = &quot;studios&quot;, all = TRUE) #clean all the NA selectstudioclean &lt;- na.omit(selectstudioall) #re name the heading colnames(selectstudioclean) &lt;- c(&quot;studios&quot;, &quot;production&quot;,&quot;avg_rating&quot;,&quot;title&quot;,&quot;startyr&quot;,&quot;rating&quot;) #create a list that is showing the studios average rating of each year. newavg &lt;- selectstudioclean %&gt;% select(studios, rating, production, avg_rating,startyr) newavg1 &lt;- aggregate(newavg[, 2:4], list(newavg$studios, newavg$startyr), mean) colnames(newavg1) &lt;- c(&quot;studios&quot;,&quot;startyr&quot;,&quot;rating&quot;, &quot;production&quot;,&quot;avg_rating&quot;) 3.2 Racing plot 1 This racing plot could show each year, which studio has highest average rating. summary(selectstudioclean) ## studios production avg_rating title ## Length:4857 Min. : 42.0 Min. :2.756 Length:4857 ## Class :character 1st Qu.: 99.0 1st Qu.:2.864 Class :character ## Mode :character Median :229.0 Median :3.196 Mode :character ## Mean :265.9 Mean :3.148 ## 3rd Qu.:339.0 3rd Qu.:3.276 ## Max. :683.0 Max. :3.661 ## startyr rating ## Min. :1956 Min. :0.000 ## 1st Qu.:1999 1st Qu.:2.732 ## Median :2008 Median :3.322 ## Mean :2005 Mean :3.166 ## 3rd Qu.:2014 3rd Qu.:3.852 ## Max. :2022 Max. :4.702 library(gganimate) library(av) #create ranking list newavg2 &lt;- newavg1 %&gt;% group_by(startyr)%&gt;% arrange(startyr, - rating)%&gt;% mutate(ranking = 1:n()) #Drop row that the year is above 2020. newavg2 &lt;-newavg2 [!(newavg2$startyr == &quot;2021&quot;|newavg2$startyr == &quot;2022&quot;),] #Plot the graph top1 &lt;- ggplot(newavg2, aes(ranking, group = studios, fill = as.factor(studios), color = as.factor(studios))) + geom_tile(aes(y = rating, height = rating, width = 0.9), alpha = 0.8, color = NA) + geom_text(aes(y = 0, label = paste(studios, &quot; &quot;)), vjust = 0.5, hjust = 0.5, size = 6, fontface=&quot;bold&quot;) + geom_text(aes(y=rating,label = round(rating, digits = 1)), colour = &quot;black&quot;, hjust=1) + coord_flip(clip = &quot;off&quot;, expand = FALSE) + scale_y_continuous(labels = scales::comma) + #reverse display scale_x_reverse() + guides(color = FALSE, fill = FALSE) + #set up theme i.e. the backgroud of the plot, the grid line etc theme(axis.line=element_blank(), axis.text.x=element_blank(), axis.text.y=element_blank(), axis.ticks=element_blank(), axis.title.x=element_blank(), axis.title.y=element_blank(), legend.position=&quot;none&quot;, panel.background=element_blank(), panel.border=element_blank(), panel.grid.major=element_blank(), panel.grid.minor=element_blank(), panel.grid.major.x = element_line( size=.1, color=&quot;grey&quot; ), panel.grid.minor.x = element_line( size=.1, color=&quot;grey&quot; ), plot.title=element_text(size=25, hjust=0.5, face=&quot;bold&quot;, colour=&quot;grey&quot;, vjust=1), plot.subtitle=element_text(size=17, hjust=0.5, face=&quot;italic&quot;, color=&quot;grey&quot;), plot.caption =element_text(size=8, hjust=0.5, face=&quot;italic&quot;, color=&quot;grey&quot;), plot.background=element_blank(), plot.margin = margin(2,2, 2, 4, &quot;cm&quot;), plot.tag.position = c (0.2, 0)) #animate the graph with label anim = top1 + transition_states(startyr, transition_length = 4, state_length = 1) + view_follow(fixed_x = TRUE) + labs(title = &#39;Studio average rating change by year : {closest_state}&#39;, subtitle = &quot;Top 37 Studio racing plot&quot;, tag = &quot;Figure4: 1958-2020 Studio&#39;s raced rating change&quot;) #nframes = 2 x length of the showing year (startyr). Without setting the plot will only show first 50 years anime.gif &lt;- animate(anim, nframes = 150, fps = 2.5, width = 1000, height = 1200) anime.gif 3.3 Racing plot 2 This plot fixing each studio’s position for better look or target a specific studio to visualise the rating change over the years. topcompany &lt;- ggplot(data=newavg2,aes (x = studios, y = rating, fill = rating))+ geom_bar(stat = &#39;identity&#39;,size = 6, fontface=&quot;bold&quot;)+ geom_text(aes(label=format(round(rating)), y=rating, hjust = -1), position=position_dodge(1)) + coord_flip()+ #Let the colour change along with the rating scale_fill_gradient(low = &#39;grey39&#39;, high = &#39;cyan&#39;)+ scale_y_continuous(&quot;rating&quot;) + theme_classic()+ #Set up theme theme(legend.position=&#39;none&#39;, axis.text.y = element_text(size = 10, face = &quot;bold&quot;), plot.subtitle = element_text(size = 15, hjust = 1, vjust = -2, face = &quot;bold&quot;), plot.tag.position = c (0.3, 0))+ #Animate the graph transition_states(states=startyr, transition_length=4, state_length = 1) + ease_aes(&#39;cubic-in-out&#39;) + labs (subtitle = &#39;Year:{closest_state}&#39;, tag = &quot;Figure5: 1958-2020 Studio&#39;s rating change&quot;)+ labs(x=&#39;Studio name&#39;) anime1.gif &lt;- animate (topcompany, nframes = 150, fps = 2, width = 600, height = 800) anime1.gif 3.4 Racing plot on best studio Merge data set first #created a new dataset that merge top37 to the best studio beststudior &lt;- merge(newavg2, beststudio1, by = &quot;studios&quot;, all = TRUE) beststudior &lt;- na.omit(beststudior) beststudior &lt;- beststudior%&gt;% select(studios, startyr,rating.x,avg_rating,production.x,ranking) colnames(beststudior) &lt;- c(&quot;studios&quot;,&quot;startyr&quot;,&quot;rating&quot;,&quot;avg_rating&quot;, &quot;production&quot;,&quot;ranking&quot;) Plot the racing graph This plot shows the rate racing between the best studio each year. "],["discussion.html", "Part 4 Discussion 4.1 Further work suggestion and thoughts", " Part 4 Discussion In general, if an anime was produced by a top-rated studio, the average rating of their output never below 3 (out of 5)! There is a reason why people will have faith in some studios. Like Bones and Kyoto anime, their output average rating always in the top 4 by looking at figure 6. Considering their number of total productions is above mean, it really shows how the consistency of their anime quality. Of course, prolific anime studio does not indicate the consistency on quality, as they may have many projects at once, so they must sacrifice some of the output, to push the rating on their main projects, thus resulting in the fluctuation on their yearly average rating. However, by looking at figure 1, most of the prolific studios have an average rating above 3, do shows a big studio is a big studio, the output can be promised. Based on the data, Bones studio, is the best anime studio, with their rating of the work barely below 3.5, indicate their unchanged anime quality since day 1. As an additional interesting fact, Full Metal Alchemist (2009) was produced by this studio, and it has been rated as the top 1 animate in almost all the anime streaming website, and never fall out of the top 5 list until now. 4.1 Further work suggestion and thoughts There are many potentials for this data set, as for this project, it only used 4 columns of information. If I had more time, I really want to create a more reliable ranking plot that taken into account the number of votes and watched rate. Furthermore, to create a recommendation engine based on type and genre. But for that, I need to learn how to analyse words in R. "]]
